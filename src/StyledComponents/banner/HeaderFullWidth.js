import React from 'react'
import styled from "styled-components";

const HeaderFullWidthStyled = styled.div`
    width: 100%;
    display: flex;
    height: ${props => props.customHeight || '7rem'};
    position: absolute;
    top: 0;
    left: 0;

    .contentContainer {
        width: 100%;
        padding: 3% 5%;
        .borderBottom1 {
            width: 100%;
            border-bottom: 1px solid grey;
            -webkit-animation: scale-in-center 0.5s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;
	        animation: scale-in-center 0.5s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;
        }
        .borderBottom2 {
            width: 90%;
            border-bottom: 1px solid grey;
            padding-top: .5rem;
            margin-top: .2rem;
            margin-left: 5%;
            -webkit-animation: scale-in-center 0.5s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;
	        animation: scale-in-center 0.5s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;
        }
    }

    .containerWrapper {
        height: 100%;
        display: flex;
        align-items: center;
        .container {
            display: grid;
            width: 100%;
            grid-template-columns: 33% 33% 33%;
            /* grid-gap: 20%; */
            .containerMiddle {
                display: flex;
                justify-content: center;
                -webkit-animation: scale-in-center 0.5s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;
	         animation: scale-in-center 0.5s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;
                .svg {
                    width: 5rem;
                    height: auto;     
                    padding-bottom: .5rem;               
                }
            }
            .containerInner {
                display: flex;
                align-items: center;
                -webkit-animation: bounce-in-top 1.1s both;
                animation: bounce-in-top 1.1s both;
                .blockchainText {
                    margin-right: 1rem;
                }
                .blockchainText, .blockChainType {
                    font-size: 2.5rem;
                    font-family: 'Catamaran', sans-serif;
                    color: #e6f3fe;
                    .type {
                        font-size: .5rem;
                    }
                    .value {
                        line-height: 2.5rem;
                    }
                }

                .blockChainType {
                    background-color: #000;
                    padding: .5rem 2rem;
                    border-radius: 7px;
                }
                .glow {
                    animation: glow 4s ease-in infinite;
                }
            }

        }
    }

/* ----------------------------------------------
 * Generated by Animista on 2021-9-8 23:25:41
 * Licensed under FreeBSD License.
 * See http://animista.net/license for more info. 
 * w: http://animista.net, t: @cssanimista
 * ---------------------------------------------- */

/**
 * ----------------------------------------
 * animation bounce-in-top
 * ----------------------------------------
 */
 @-webkit-keyframes bounce-in-top {
  0% {
    -webkit-transform: translateY(-500px);
            transform: translateY(-500px);
    -webkit-animation-timing-function: ease-in;
            animation-timing-function: ease-in;
    opacity: 0;
  }
  38% {
    -webkit-transform: translateY(0);
            transform: translateY(0);
    -webkit-animation-timing-function: ease-out;
            animation-timing-function: ease-out;
    opacity: 1;
  }
  55% {
    -webkit-transform: translateY(-65px);
            transform: translateY(-65px);
    -webkit-animation-timing-function: ease-in;
            animation-timing-function: ease-in;
  }
  72% {
    -webkit-transform: translateY(0);
            transform: translateY(0);
    -webkit-animation-timing-function: ease-out;
            animation-timing-function: ease-out;
  }
  81% {
    -webkit-transform: translateY(-28px);
            transform: translateY(-28px);
    -webkit-animation-timing-function: ease-in;
            animation-timing-function: ease-in;
  }
  90% {
    -webkit-transform: translateY(0);
            transform: translateY(0);
    -webkit-animation-timing-function: ease-out;
            animation-timing-function: ease-out;
  }
  95% {
    -webkit-transform: translateY(-8px);
            transform: translateY(-8px);
    -webkit-animation-timing-function: ease-in;
            animation-timing-function: ease-in;
  }
  100% {
    -webkit-transform: translateY(0);
            transform: translateY(0);
    -webkit-animation-timing-function: ease-out;
            animation-timing-function: ease-out;
  }
}


@keyframes bounce-in-top {
  0% {
    -webkit-transform: translateY(-500px);
            transform: translateY(-500px);
    -webkit-animation-timing-function: ease-in;
            animation-timing-function: ease-in;
    opacity: 0;
  }
  38% {
    -webkit-transform: translateY(0);
            transform: translateY(0);
    -webkit-animation-timing-function: ease-out;
            animation-timing-function: ease-out;
    opacity: 1;
  }
  55% {
    -webkit-transform: translateY(-65px);
            transform: translateY(-65px);
    -webkit-animation-timing-function: ease-in;
            animation-timing-function: ease-in;
  }
  72% {
    -webkit-transform: translateY(0);
            transform: translateY(0);
    -webkit-animation-timing-function: ease-out;
            animation-timing-function: ease-out;
  }
  81% {
    -webkit-transform: translateY(-28px);
            transform: translateY(-28px);
    -webkit-animation-timing-function: ease-in;
            animation-timing-function: ease-in;
  }
  90% {
    -webkit-transform: translateY(0);
            transform: translateY(0);
    -webkit-animation-timing-function: ease-out;
            animation-timing-function: ease-out;
  }
  95% {
    -webkit-transform: translateY(-8px);
            transform: translateY(-8px);
    -webkit-animation-timing-function: ease-in;
            animation-timing-function: ease-in;
  }
  100% {
    -webkit-transform: translateY(0);
            transform: translateY(0);
    -webkit-animation-timing-function: ease-out;
            animation-timing-function: ease-out;
  }
}

@-webkit-keyframes scale-in-center {
        0% {
            -webkit-transform: scale(0);
                    transform: scale(0);
            opacity: 1;
        }
        100% {
            -webkit-transform: scale(1);
                    transform: scale(1);
            opacity: 1;
        }
}
@keyframes scale-in-center {
0% {
    -webkit-transform: scale(0);
            transform: scale(0);
    opacity: 1;
}
100% {
    -webkit-transform: scale(1);
            transform: scale(1);
    opacity: 1;
}
}



@-webkit-keyframes glow {
                from {
                    box-shadow:
                        inset 0 0 50px #fff,
                        inset 20px 0 80px #f0f,
                        inset -20px 0 80px #0ff,
                        inset 20px 0 300px #f0f,
                        inset -20px 0 300px #0ff,
                        0 0 80px #fff,
                        -10px 0 80px #f0f,
                        10px 0 80px #0ff;
                }
                 50% {
                    box-shadow:
                    inset 0 0 30px #fff,
                    inset 20px 0 80px #f0f,
                    inset -20px 0 80px #0ff,
                    inset 20px 0 300px #f0f,
                    inset -20px 0 300px #0ff,
                    0 0 50px #fff,
                    -10px 0 80px #f0f,
                    10px 0 80px #0ff;                   
                } to {
                    box-shadow:
                    inset 0 0 50px #fff,
                    inset 20px 0 80px #f0f,
                    inset -20px 0 80px #0ff,
                    inset 20px 0 300px #f0f,
                    inset -20px 0 300px #0ff,
                    0 0 50px #fff,
                    -10px 0 80px #f0f,
                    10px 0 80px #0ff;
                }
}
@keyframes glow {
    from {
        box-shadow:
            inset 0 0 50px #fff,
            inset 20px 0 80px #f0f,
            inset -20px 0 80px #0ff,
            inset 20px 0 300px #f0f,
            inset -20px 0 300px #0ff,
            0 0 50px #fff,
            -10px 0 80px #f0f,
            10px 0 80px #0ff;
    } 
        50% {
        box-shadow:
        inset 0 0 30px #fff,
        inset 20px 0 80px #f0f,
        inset -20px 0 80px #0ff,
        inset 20px 0 300px #f0f,
        inset -20px 0 300px #0ff,
        0 0 50px #fff,
        -10px 0 80px #f0f,
        10px 0 80px #0ff;                   
    } to {
        box-shadow:
        inset 0 0 50px #fff,
        inset 20px 0 80px #f0f,
        inset -20px 0 80px #0ff,
        inset 20px 0 300px #f0f,
        inset -20px 0 300px #0ff,
        0 0 50px #fff,
        -10px 0 80px #f0f,
        10px 0 80px #0ff;
    }
}

`

export default function HeaderFullWidth(props) {
    const { backgroundColor, customHeight, customClassname } = props

    // const useState(0)
    return (
        <HeaderFullWidthStyled backgroundColor={backgroundColor} customHeight={customHeight} className={`headerFullWidth ${customClassname}`}>
            <div className='contentContainer'>

                <div className='content'>
                    {props.children}

                </div>
                <div className='borderBottom1'/>
                <div className='borderBottom2' />
            </div>
        </HeaderFullWidthStyled>
    )
}
